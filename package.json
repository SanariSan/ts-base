{
  "name": "min-ts-express",
  "version": "1.0.0",
  "main": "dist/index.js",
  "author": "SanariSan <SanariSan@users.noreply.github.com>",
  "license": "MIT",
  "scripts": {
    "---tips": "---------------------------------------------------------------",
    "------start": "accepts -linux/-win, always triggers build, which is for pre/post build compatibility",
    "------build": "accepts -linux/-win",
    "------launch": "accepts -dev/-prod",
    "------prebuild-skip": "swap between true/false to turn skip on/off",
    "---general control": "---------------------------------------------------------------",
    "start": "yarn start-linux",
    "build": "yarn build-linux",
    "launch": "yarn launch-dev",
    "once": "ts-node --project tsconfig.json ./src/app.ts",
    "mon": "nodemon",
    "prebuild-skip": "true",
    "prebuild": "yarn prebuild-skip || (yarn format && yarn lint)",
    "postbuild": "node ./node_modules/copyfiles/copyfiles -u 1 -e \"**/*.js\" -e \"**/*.ts\" \"src/**/*\" dist",
    "---start os": "---------------------------------------------------------------",
    "start-linux": "yarn build-linux && yarn cli-wipe-linux && yarn launch",
    "start-ts-linux": "yarn cli-wipe-linux && node ./node_modules/ts-node/dist/bin.js ./src/app.ts",
    "start-win": "yarn build-win && yarn cli-wipe-win && yarn launch",
    "start-ts-win": "yarn cli-wipe-win && node ./node_modules/ts-node/dist/bin.js ./src/app.ts",
    "---start-general": "---------------------------------------------------------------",
    "start-linux-prod": "yarn build && yarn launch-prod",
    "start-win-prod": "yarn build && yarn launch-prod",
    "start-prod": "yarn build && yarn launch-prod",
    "---build os": "---------------------------------------------------------------",
    "build-linux": "yarn build-drop-linux && tsc && yarn postbuild",
    "build-drop-linux": "rm -rf ./dist",
    "build-win": "yarn build-drop-win && tsc && yarn postbuild",
    "build-drop-win": "del /f /s /q \"./dist\"",
    "---launch general": "---------------------------------------------------------------",
    "launch-prod": "node ./node_modules/cross-env/src/bin/cross-env.js NODE_ENV=production node -r dotenv/config ./dist/app.js",
    "launch-dev": "node ./node_modules/cross-env/src/bin/cross-env.js NODE_ENV=development node -r dotenv/config ./dist/app.js",
    "---prepare fs general": "---------------------------------------------------------------",
    "copy-deps": "yarn copy-config",
    "copy-config": "true",
    "---cli os": "---------------------------------------------------------------",
    "cli-wipe-linux": "printf '\\033c\\033[3J'",
    "cli-wipe-scroll-linux": "printf '\\033[H\\033[2J'",
    "cli-wipe-win": "cls",
    "---additional": "---------------------------------------------------------------",
    "pg-ts-schema": "node -r dotenv/config ./node_modules/cross-var/index.js ./node_modules/pg-to-ts/dist/cli.js generate -c postgresql://'$DB_USER':'$DB_PASSWORD'@localhost:'$DB_PORT'/'$DB_DATABASE_NAME' -o ./src/db/models.db.ts && yarn format ./src/db/models.db.ts",
    "dsa": "FOR /F %A IN ('docker container ls -q') DO docker container rm -f %~A",
    "format": "node ./node_modules/prettier/bin-prettier.js -w --config ./.prettierrc",
    "format-all": "node ./node_modules/prettier/bin-prettier.js -w --config ./.prettierrc .",
    "lint": "node ./node_modules/.bin/eslint --ext .ts ./src",
    "lint-quiet": "node ./node_modules/.bin/eslint --quiet --ext .ts ./src",
    "lint-fix": "node ./node_modules/.bin/eslint --fix --ext .ts ./src",
    "madge-json": "node ./node_modules/madge/bin/cli.js -c -j --ts-config ./tsconfig.json ./src/app.ts",
    "madge-pic": "node ./node_modules/madge/bin/cli.js -c -j -i ./dep.svg --ts-config ./tsconfig.json ./src/app.ts"
  },
  "configurationDefaults": {
    "---here can override": "any VSCODE options except those from application or machine scopes"
  },
  "dependencies": {
    "@2captcha/captcha-solver": "^1.0.0",
    "@types/ws": "^8.5.10",
    "class-validator": "^0.14.1",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "dotenv": "^12.0.3",
    "express": "^4.18.2",
    "express-rate-limit": "^6.7.0",
    "express-session": "^1.17.3",
    "form-data": "^4.0.0",
    "helmet": "^6.0.0",
    "https-proxy-agent": "^7.0.4",
    "mongoose": "^8.3.2",
    "node-fetch": "^3.3.2",
    "pino": "^8.19.0",
    "ws": "^8.16.0"
  },
  "devDependencies": {
    "@types/cors": "^2.8.12",
    "@types/express": "^4.17.13",
    "@types/express-session": "^1.17.5",
    "@types/node": "^20",
    "@typescript-eslint/eslint-plugin": "^5.3.0",
    "@typescript-eslint/parser": "^5.3.0",
    "copyfiles": "^2.4.1",
    "cross-var": "^1.1.0",
    "eslint": "^7.2.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-airbnb-typescript": "^14.0.1",
    "eslint-config-prettier": "^8.3.0",
    "eslint-import-resolver-node": "^0.3.6",
    "eslint-import-resolver-typescript": "^2.5.0",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-promise": "^5.1.1",
    "eslint-plugin-unicorn": "^38.0.0",
    "madge": "^5.0.1",
    "nodemon": "^2.0.22",
    "prettier": "^2.4.1",
    "ts-node": "^10.3.0",
    "typescript": "^5"
  }
}
